@page "/edit/{projectId:int}"
@inject MyPortfolio.WASM.ProjectApiService projectApi

@using MyPortfolio.Shared

<div>
    <h3>Edit</h3>
    <div>
        <input @bind-value="editedTitle" />
        <input @bind-value="editedRequirements" />
        <input @bind-value="editedDescription" />
        <button @onclick="editProject">Edit</button>
    </div>

    <div>
        <h4>Assign Skill</h4>
        <input @bind-value="newLang" placeholder="New Language..." /><button @onclick="assignLanguage">Add Language</button>
        <input @bind-value="newPlat" placeholder="New Platform..." /><button @onclick="assignPlatform">Add Platform</button>
        <input @bind-value="newTech" placeholder="New Technology..." /><button @onclick="assignTechnology">Add Technology</button>
    </div>

    <a href="blog/@projectId">Go Back</a>
</div>


@code {
    [Parameter]
    public int projectId { get; set; }

    private string editedTitle;
    private string editedRequirements;
    private string editedDescription;

    private string newLang;
    private string newPlat;
    private string newTech;

    private Project currentProject = new Project();

    private async Task editProject()
    {
        currentProject.Title = editedTitle;
        currentProject.Requirements = editedRequirements;
        currentProject.Description = editedDescription;
        await projectApi.EditProjectAsync(currentProject);
        currentProject = await projectApi.GetProjectByIdAsync(projectId);
    }

    private async Task assignLanguage() => await projectApi.AssignAsync(MyPortfolio.Shared.Project.LanguageSkill, currentProject.Id, newLang);
    
    private async Task assignPlatform() => await projectApi.AssignAsync(MyPortfolio.Shared.Project.PlatformSkill, currentProject.Id, newPlat);
    
    private async Task assignTechnology() => await projectApi.AssignAsync(MyPortfolio.Shared.Project.TechnologySkill, currentProject.Id, newTech);

    protected override async Task OnInitializedAsync()
    {
        currentProject = await projectApi.GetProjectByIdAsync(projectId);
        editedTitle = currentProject.Title;
        editedRequirements = currentProject.Requirements;
        editedDescription = currentProject.Requirements;
    }
}
